<html><head>
<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">

<title>RDataTracker: Collecting
  Provenance in an Interactive Scripting Environment</Title>
</head><body bgcolor="white">
<center>
<h1>RDataTracker: Collecting
  Provenance in an Interactive Scripting Environment</h1>
<table>
<tr>
<td width=100>
</td>
<td>
<h2>
Barbara Staudt Lerner<br>
Computer Science Department<br>
Mt. Holyoke College<br>
blerner@mtholyoke.edu<p>
</h2>
</td>

<td>
<h2>
Emery Boose<br>
Harvard Forest<br>
Harvard University<br>
boose@fas.harvard.edu<p>
</h2>
</td>

</tr>

</table>

<h3>
Abstract
</h3>
</center>

<p>Exception-driven rework occurs commonly in software development. In
this paper, we describe a simple refactoring process, showing the use
of the exception-driven rework exception handling pattern within
it. We also discuss the important role that context plays in
supporting the user during rework in helping the user keep track of
the tasks being worked on and to facilitate resumption of normal
activities upon completion of the exception handling work. The example
process is specified in the Little-JIL process definition
language. The use of context information in supporting the user is
illustrated using a Data Derivation Graph (DDG), a graph that is
automatically generated to document the ways in which artifact values
are evolved during execution of a Little-JIL process. 
</p>
</body></html>


